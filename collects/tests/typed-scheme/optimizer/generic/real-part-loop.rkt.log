real-part-loop.rkt line 8 col 10 - real-part - unboxed unary inexact complex**
real-part-loop.rkt line 8 col 9 - (#%app real-part v) - unboxed inexact complex->float
real-part-loop.rkt line 8 col 20 - v - unboxed complex variable 
real-part-loop.rkt line 8 col 10 - real-part - unboxed inexact complex
real-part-loop.rkt line 8 col 7 - > - binary float comp
real-part-loop.rkt line 10 col 17 - (quote 3.6) - float-coerce-expr
real-part-loop.rkt line 10 col 13 - + - unboxed binary inexact complex
real-part-loop.rkt line 10 col 7 - loop - unboxed call site
real-part-loop.rkt line 7 col 1 - (letrec-values (((loop) (lambda (v) (if (#%app > (#%app real-part v) (quote 70000.2)) (quote 0) (#%app loop (#%app + v (quote 3.6))))))) loop) - unboxed let bindings
real-part-loop.rkt line 7 col 1 - (letrec-values (((loop) (lambda (v) (if (#%app > (#%app real-part v) (quote 70000.2)) (quote 0) (#%app loop (#%app + v (quote 3.6))))))) loop) - unboxed call site
0
