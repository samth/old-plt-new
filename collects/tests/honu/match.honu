#lang honu

var => = 0

pattern match_pattern (){ [element:expression] } { [element] }

pattern match_clause (| =>){ | pattern:match_pattern => out:expression , }

macro mymatch(with){
  thing:expression with
  clause:match_clause ...
} {
  syntax(
    cond
     $ clause_pattern == thing: clause_out, $ ...
     else: -2

    /*
    if (clause_pattern == thing){
      clause_out
    } else {
      -2
    }
    */)
}

mymatch [1] with
| [1] => 5,
| [2] => 6,

// mymatch [1] with | [2] => 5
